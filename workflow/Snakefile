# Snakemake workflow for various types of metagenomic analyses.


report: "report/workflow.rst"


include: "rules/common.smk"
include: "rules/other.smk"
include: "rules/annotation.smk"


# if config says to run analysis on split protein file,
# this makes the necessary adjustments
if int(config["annotation"]["splits"]) > 1:

    include: "rules/annotation_split.smk"

    ruleorder: pfam_scan_gather > pfam_scan


include: "rules/assembly.smk"


include: "rules/binning.smk"


include: "rules/classification.smk"


include: "rules/preprocessing.smk"


include: "rules/quantification.smk"


include: "rules/taxonomy.smk"


def all_input(wildcards):

    """
    Function defining all requested inputs for the rule all (below).
    """
    wanted_input = []

    if config["run_preprocessing"] or config["preprocessing"]["fastqc"]:
        wanted_input.append(results + "/report/samples_report.html")

    if config["run_assembly"]:
        # add assembly output
        wanted_input += [
            f"{results}/assembly/{assembly}/final_contigs.fa"
            for assembly in assemblies.keys()
        ]
        # get annotation input
        wanted_input += annotation_input(config, assemblies)
        # get binning input
        wanted_input += binning_input(config)

    wanted_input += classify_input(config)

    return wanted_input


##### master target rule #####
rule all:
    input:
        all_input,
